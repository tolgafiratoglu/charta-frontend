[{"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\reportWebVitals.js":"1","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\App.js":"2","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\Login.js":"3","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\service\\postService.js":"4","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\index.js":"5","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\Building.js":"6","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\partials\\Sidebar.js":"7","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\partials\\ListItem.js":"8","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\config\\system.js":"9","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\service\\getService.js":"10","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\service\\deleteService.js":"11"},{"size":362,"mtime":1612294086505,"results":"12","hashOfConfig":"13"},{"size":441,"mtime":1612875407607,"results":"14","hashOfConfig":"13"},{"size":2820,"mtime":1612714326707,"results":"15","hashOfConfig":"13"},{"size":712,"mtime":1612721056971,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1612294086505,"results":"17","hashOfConfig":"13"},{"size":3539,"mtime":1612726119740,"results":"18","hashOfConfig":"13"},{"size":885,"mtime":1612728734719,"results":"19","hashOfConfig":"13"},{"size":2035,"mtime":1612383337663,"results":"20","hashOfConfig":"13"},{"size":477,"mtime":1612720844634,"results":"21","hashOfConfig":"13"},{"size":707,"mtime":1612720902830,"results":"22","hashOfConfig":"13"},{"size":716,"mtime":1612720854450,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"j8wl3q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\reportWebVitals.js",[],["52","53"],"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\App.js",["54"],"import './App.css';\n\nimport Login from \"./component/Login\"\nimport Building from \"./component/Building\"\n\nimport { Route, Switch, Redirect, BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/building\" component={Building} />\n        </Switch>  \n    </Router>      \n  );\n}\n\nexport default App;\n","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\Login.js",["55","56","57","58","59"],"import React from 'react';\r\n\r\nimport  { Redirect } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\r\n\r\nimport postService from \"../service/postService\"\r\n\r\nconst Login = (props) => {\r\n\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [error, setError] = React.useState(\"\");\r\n\r\n    const submitLogin = async () => {\r\n        // Call asyncron post service:\r\n        return await postService(\"login\", {\"username\": username, \"password\": password}).then(\r\n            (response) => {\r\n                if(response.status === \"success\"){\r\n                    const responseData = response.data \r\n                    localStorage.setItem('jwtToken', responseData.access)\r\n                    localStorage.setItem('refreshToken', responseData.refresh)\r\n                    props.history.push(\"/dashboard\")\r\n                }else{\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"charta-content-container\">\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"12\">\r\n                        <div className=\"charta-content-canvas charta-content-wrapped-boxed\">\r\n                            <Form>\r\n                                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                                    <Label for=\"username\" className=\"mr-sm-2 mt-sm-1\">Username</Label>\r\n                                    <Input type=\"username\" name=\"username\" id=\"login_username\" placeholder=\"Username\"\r\n                                           onChange={e => setUsername(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                                    <Label for=\"password\" className=\"mr-sm-2 mt-sm-1\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"login_password\" placeholder=\"\"\r\n                                           onChange={e => setPassword(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 mt-sm-3\">\r\n                                    <Button onClick={()=>{submitLogin()}}>\r\n                                        Sign In\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n}       \r\n\r\nexport default Login;","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\service\\postService.js",[],"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\index.js",[],"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\Building.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"import React, {useEffect} from 'react';\r\n\r\nimport  { Redirect } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\r\n\r\nimport getService from \"../service/getService\"\r\nimport deleteService from \"../service/deleteService\"\r\n\r\nimport ListItem from \"../component/partials/ListItem\"\r\nimport Sidebar from \"../component/partials/Sidebar\"\r\n\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n\r\nimport Pagination from \"react-bootstrap-4-pagination\";\r\n\r\nimport config from \"../config/system\";\r\n\r\nconst Building = (props) => {\r\n\r\n    const [listItems, setListItems] = React.useState([]);\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const [page, setCurrentPage] = React.useState(1);\r\n    const [totalResults, setTotalResults] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        getBuildingList(1)\r\n    }, []);\r\n\r\n    const editCallback = (id) =>{\r\n        props.history.push(\"/building/edit/\" + id)\r\n    }\r\n\r\n    const deleteCallback = (id) =>{\r\n        confirmAlert({\r\n            title: 'confirm.delete.title',\r\n            message: 'confirm.delete.message',\r\n            buttons: [\r\n              { label: 'Yes', onClick: () => deleteItem(id)},\r\n              { label: 'No' }\r\n            ]\r\n          });\r\n    }\r\n\r\n    const pageChanged = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n        setListItems([])\r\n        getBuildingList(pageNumber)\r\n    }\r\n\r\n    const getBuildingList = (currentPage) => {\r\n\r\n        var pagination = config.get(\"pagination.building\")\r\n        var offset = (page - 1) * pagination\r\n        var getRequest = \"offset=\" + offset\r\n\r\n        getService(\"building_list\", getRequest).then(\r\n            (response) => {\r\n                setListItems(response.data.data)\r\n                setTotalResults(response.data.totalResults)\r\n            }\r\n        )\r\n           \r\n    }\r\n\r\n    const deleteItem = (id) =>{\r\n        deleteService(\"building\", id).then(\r\n            (response) => {\r\n                if(response.data.status == 'success'){\r\n                    getBuildingList(1);\r\n                }\r\n            }\r\n        )\r\n    }   \r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"charta-content-container\">\r\n                <Row>\r\n                    <Col xs=\"0\" sm=\"3\" className=\"d-none d-lg-block\">\r\n                        <Sidebar></Sidebar>\r\n                    </Col>\r\n                    <Col xs=\"12\" sm=\"9\">\r\n                        <div className=\"list-wrapper\">\r\n                            {listItems && listItems.length > 0 ? listItems.map(function(listItem, idx){\r\n                                return (\r\n                                    <ListItem id={listItem.id} edit={editCallback} delete={deleteCallback} key={listItem.id} title={listItem.code}></ListItem>\r\n                                )\r\n                            }) : 'No Buildings Yet'}\r\n                        </div>\r\n                        <Pagination\r\n                            activePage={page}\r\n                            itemsCountPerPage={10}\r\n                            totalItemsCount={totalResults}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={pageChanged.bind(this)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n}       \r\n\r\nexport default Building;","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\partials\\Sidebar.js",["74","75","76","77","78"],"import React, { Component, useEffect } from 'react';\r\n\r\nimport { Nav, NavLink} from 'reactstrap';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBuilding} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Nav vertical>\r\n                <div>\r\n                    <h6>\r\n                        <FontAwesomeIcon icon={faBuilding} />\r\n                        <NavLink key=\"building_link\" href=\"/building\"><span className=\"sidebar-icon\"></span><span className=\"sidebar-label\">{ t('sidebar.building') }</span></NavLink>\r\n                    </h6>\r\n                </div>    \r\n            </Nav>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\component\\partials\\ListItem.js",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"import {Button, Col, Container, Row} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faClone, faThumbsUp, faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {faEdit, faSpinner, faImage, faKey} from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {text} from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n\r\nconst ListItem = (props) => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const [hidden, setHidden] = React.useState(false);\r\n\r\n    const id = props.id\r\n    const title = props.title\r\n    const subTitle = props.subTitle\r\n    const subContent = props.subContent\r\n\r\n    const updateButtonVisibility = props.updateButtonVisibility\r\n    const deleteButtonVisibility = props.deleteButtonVisibility\r\n\r\n    return(!hidden ? <Container key={id} className=\"list-container\">\r\n               <ToastContainer />\r\n               <Row>\r\n                    <Col className=\"col-md-6\">\r\n                        <div>\r\n                            <span className=\"font-weight-bold\">{title} {subContent ? '(' + subContent + ')' : ''}</span>\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"list-buttons col-md-6\">\r\n                        {deleteButtonVisibility == \"1\" ? <Button onClick={()=>{props.delete(id)}} color=\"warning\"><FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon> { t('commons.delete') }</Button> : ''}\r\n                        {updateButtonVisibility == \"1\" ? <Button onClick={()=>{props.edit(id)}} color=\"info\"><FontAwesomeIcon icon={faEdit}></FontAwesomeIcon> { t('commons.edit') }</Button> : ''}\r\n                    </Col>\r\n               </Row>\r\n               { subTitle ? <Row><Col className=\"col-md-9\"><div>{subTitle}</div></Col></Row> : '' }\r\n          </Container> : '')\r\n\r\n}\r\n\r\nexport default ListItem;","C:\\Users\\tolga\\GIT\\charta-frontend\\src\\config\\system.js",[],"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\service\\getService.js",[],"C:\\Users\\tolga\\GIT\\charta-frontend\\src\\service\\deleteService.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":6,"column":25,"nodeType":"98","messageId":"99","endLine":6,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":3,"column":11,"nodeType":"98","messageId":"99","endLine":3,"endColumn":19},{"ruleId":"96","severity":1,"message":"100","line":6,"column":70,"nodeType":"98","messageId":"99","endLine":6,"endColumn":78},{"ruleId":"96","severity":1,"message":"101","line":6,"column":80,"nodeType":"98","messageId":"99","endLine":6,"endColumn":85},{"ruleId":"96","severity":1,"message":"102","line":14,"column":12,"nodeType":"98","messageId":"99","endLine":14,"endColumn":17},{"ruleId":"96","severity":1,"message":"103","line":14,"column":19,"nodeType":"98","messageId":"99","endLine":14,"endColumn":27},{"ruleId":"96","severity":1,"message":"97","line":3,"column":11,"nodeType":"98","messageId":"99","endLine":3,"endColumn":19},{"ruleId":"96","severity":1,"message":"104","line":6,"column":31,"nodeType":"98","messageId":"99","endLine":6,"endColumn":37},{"ruleId":"96","severity":1,"message":"105","line":6,"column":39,"nodeType":"98","messageId":"99","endLine":6,"endColumn":43},{"ruleId":"96","severity":1,"message":"106","line":6,"column":45,"nodeType":"98","messageId":"99","endLine":6,"endColumn":54},{"ruleId":"96","severity":1,"message":"107","line":6,"column":56,"nodeType":"98","messageId":"99","endLine":6,"endColumn":61},{"ruleId":"96","severity":1,"message":"108","line":6,"column":63,"nodeType":"98","messageId":"99","endLine":6,"endColumn":68},{"ruleId":"96","severity":1,"message":"100","line":6,"column":70,"nodeType":"98","messageId":"99","endLine":6,"endColumn":78},{"ruleId":"96","severity":1,"message":"101","line":6,"column":80,"nodeType":"98","messageId":"99","endLine":6,"endColumn":85},{"ruleId":"96","severity":1,"message":"109","line":16,"column":26,"nodeType":"98","messageId":"99","endLine":16,"endColumn":41},{"ruleId":"96","severity":1,"message":"110","line":16,"column":43,"nodeType":"98","messageId":"99","endLine":16,"endColumn":48},{"ruleId":"96","severity":1,"message":"111","line":25,"column":13,"nodeType":"98","messageId":"99","endLine":25,"endColumn":14},{"ruleId":"96","severity":1,"message":"112","line":25,"column":16,"nodeType":"98","messageId":"99","endLine":25,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":32,"column":8,"nodeType":"115","endLine":32,"endColumn":10,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":73,"column":41,"nodeType":"119","messageId":"120","endLine":73,"endColumn":43},{"ruleId":"96","severity":1,"message":"121","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"122","line":1,"column":28,"nodeType":"98","messageId":"99","endLine":1,"endColumn":37},{"ruleId":"96","severity":1,"message":"109","line":7,"column":26,"nodeType":"98","messageId":"99","endLine":7,"endColumn":41},{"ruleId":"96","severity":1,"message":"110","line":7,"column":43,"nodeType":"98","messageId":"99","endLine":7,"endColumn":48},{"ruleId":"96","severity":1,"message":"112","line":12,"column":16,"nodeType":"98","messageId":"99","endLine":12,"endColumn":20},{"ruleId":"96","severity":1,"message":"123","line":3,"column":9,"nodeType":"98","messageId":"99","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"124","line":3,"column":18,"nodeType":"98","messageId":"99","endLine":3,"endColumn":28},{"ruleId":"96","severity":1,"message":"125","line":4,"column":17,"nodeType":"98","messageId":"99","endLine":4,"endColumn":26},{"ruleId":"96","severity":1,"message":"126","line":4,"column":28,"nodeType":"98","messageId":"99","endLine":4,"endColumn":35},{"ruleId":"96","severity":1,"message":"127","line":4,"column":37,"nodeType":"98","messageId":"99","endLine":4,"endColumn":42},{"ruleId":"96","severity":1,"message":"128","line":7,"column":26,"nodeType":"98","messageId":"99","endLine":7,"endColumn":31},{"ruleId":"96","severity":1,"message":"129","line":9,"column":9,"nodeType":"98","messageId":"99","endLine":9,"endColumn":13},{"ruleId":"96","severity":1,"message":"109","line":11,"column":26,"nodeType":"98","messageId":"99","endLine":11,"endColumn":41},{"ruleId":"96","severity":1,"message":"110","line":11,"column":43,"nodeType":"98","messageId":"99","endLine":11,"endColumn":48},{"ruleId":"96","severity":1,"message":"112","line":15,"column":16,"nodeType":"98","messageId":"99","endLine":15,"endColumn":20},{"ruleId":"96","severity":1,"message":"130","line":17,"column":20,"nodeType":"98","messageId":"99","endLine":17,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":36,"column":49,"nodeType":"119","messageId":"120","endLine":36,"endColumn":51},{"ruleId":"117","severity":1,"message":"118","line":37,"column":49,"nodeType":"119","messageId":"120","endLine":37,"endColumn":51},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","'Alert' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'withTranslation' is defined but never used.","'Trans' is defined but never used.","'t' is assigned a value but never used.","'i18n' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBuildingList'. Either include it or remove the dependency array.","ArrayExpression",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'useEffect' is defined but never used.","'faClone' is defined but never used.","'faThumbsUp' is defined but never used.","'faSpinner' is defined but never used.","'faImage' is defined but never used.","'faKey' is defined but never used.","'toast' is defined but never used.","'text' is defined but never used.","'setHidden' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [getBuildingList]",{"range":"136","text":"137"},[1004,1006],"[getBuildingList]"]